// Program.cs (Illustrative changes)
using System;
using System.Security.Cryptography;
using System.Text;
using DistricutedCryptographyLib; // Make sure this using is present

public class Program
{
	public static void Main(string[] args)
	{
		var encryptionService = new EncryptionService(); // Assuming you are using instance methods

		Console.WriteLine("AES-GCM Encryption/Decryption Test (Error Handling via Result Objects)\n");

		string originalText = "This is a super secret message! Handle with care. 🤫";
		Console.WriteLine($"Original Text: \"{originalText}\"\n");

		// Test 1: Auto-generate key
		Console.WriteLine("--- Test 1: Auto-generating Key ---");
		string? autoGeneratedKey = null;
		string? encryptedText1 = null; // This will be from EncryptionResult.CipherText

		var encryptionResult1 = encryptionService.Encrypt(originalText, null);

		if (encryptionResult1.Success)
		{
			encryptedText1 = encryptionResult1.CipherText;
			autoGeneratedKey = encryptionResult1.GeneratedKey;

			Console.WriteLine($"Auto-Generated Key (Base64): {autoGeneratedKey}");
			Console.WriteLine($"Encrypted Text (Base64): {encryptedText1.Substring(0, Math.Min(30, encryptedText1.Length))}...");

			if (autoGeneratedKey == null) // Should not happen if Success is true and GeneratedKey was expected
			{
				Console.WriteLine("Error: Encryption succeeded but no key was generated.");
				return;
			}

			var decryptionResult1 = encryptionService.Decrypt(encryptedText1, autoGeneratedKey);
			if (decryptionResult1.Success)
			{
				Console.WriteLine($"Decrypted Text: \"{decryptionResult1.DecryptedText}\"");
				Console.WriteLine($"Test 1 Match: {originalText == decryptionResult1.DecryptedText}\n");
			}
			else
			{
				Console.ForegroundColor = ConsoleColor.Red;
				Console.WriteLine($"Test 1 Decryption Error: {decryptionResult1.ErrorMessage}\n");
				Console.ResetColor();
			}
		}
		else
		{
			Console.ForegroundColor = ConsoleColor.Red;
			Console.WriteLine($"Test 1 Encryption Error: {encryptionResult1.ErrorMessage}\n");
			Console.ResetColor();
		}

	

		Console.WriteLine("\nTests completed.");
		Console.WriteLine("Reminder: Your project's TargetFramework (e.g., net7.0) might be out of support. Consider updating to net8.0 or net6.0 in your .csproj file.");
	}
}
